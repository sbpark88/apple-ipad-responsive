@import "../../constant";

$icon-width: 40px;

header .inner .search-wrap {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;

  .search {
    max-width: 600px;
    margin: 0 auto;
    position: relative;
  }

  .search .shadow {
    position: fixed;
    inset: 0;
    background-color: $color-shadow;
  }

  .search .text-filed {
    position: relative;

    input {
      width: 100%;
      height: $header-height;
      padding: 0 $icon-width;
      border: none;
      outline: none;
      box-sizing: border-box;
      background-color: transparent;
      font-size: 17px;
      color: $color-white;
    }

    .icon {
      width: $icon-width;
      height: $header-height;
      background-repeat: no-repeat;
      background-position: center;
      position: absolute;
      top: 0;
      opacity: 0.4;
    }

    .search-icon {
      background-image: url("../../../assets/images/header_search.svg");
      left: 0;
    }

    .search-closer {
      background-image: url("../../../assets/images/header_close.svg");
      right: 0;
      cursor: pointer;

      &:hover {
        opacity: 1;
      }
    }
  }

  .search .autocompletes {
    width: 100%;
    padding: 26px 40px 20px;
    border-radius: 0 0 18px 18px;
    box-sizing: border-box;
    background-color: $color-white;
    position: absolute;
    top: $header-height;
    left: 0;

    h3 {
      font-size: 12px;
      color: $color-font-darkgray;
      margin-bottom: 12px;
    }

    ul li {
      a {
        display: block;
        margin: 0 -14px;
        padding: 10px 0 10px 30px;
        font-size: 14px;
      }

      &:hover a {
        background-color: $color-section;
        color: $color-link;
      }
    }
  }
}

/* header.searching 전환 효과 */
header {
  // 검색창이 사라질 때(=header 태그에 searching 클래스가 제거될 때) 적용될 스타일.
  .search-wrap {
    visibility: hidden;
    opacity: 0;
    transition: $search-bar-transition-time;

    .search {
      input,
      .search-icon,
      .autocompletes h3,
      .autocompletes li {
        transition: $search-bar-transition-time;
        transform: translateX(100px);
      }

      .autocompletes {
        @for $i from 1 through $autocompletes-li-length {
          li:nth-child(#{$i}) {
            transition-delay: calc(
              #{$autocompletes-li-length -
                $i} *
                ($search-bar-transition-time / #{$autocompletes-li-length})
            );
          }
        }
      }
    }
  }

  // 검색창이 열릴 때(=header 태그에 searching 클래스가 추가될 때) 적용될 스타일.
  &.searching .search-wrap {
    visibility: visible;
    opacity: 1;
    /* 이미 시간초이기 때문에 calc 결과에 s 를 붙이지 않는다 */
    transition-delay: calc(#{$search-bar-transition-time} / 2);

    .search {
      input,
      .search-icon,
      .autocompletes h3,
      .autocompletes li {
        transition-delay: calc(#{$search-bar-transition-time} / 2);
        transform: translateX(0);
      }

      .autocompletes {
        @for $i from 1 through $autocompletes-li-length {
          li:nth-child(#{$i}) {
            transition-delay: calc(
              #{$i} *
                ($search-bar-transition-time / #{$autocompletes-li-length})
            );
          }
        }
      }
    }
  }
}
